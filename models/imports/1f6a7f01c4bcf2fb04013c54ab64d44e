User Registration and Login

The process begins when a user accesses the registration or login page of the platform. The login process is straightforward. Users must input their user id (student id for students, admin id for administrators and lecturer id for lecturers ) and password. The system then checks these credentials against the database to authenticate the user. If the details match, the user is redirected to their dashboard, where they can access various features of the platform. In the case of an authentication failure, an error message is displayed, prompting the user to retry or recover their password.

Course Management

Upon successful login, both students and lecturers can access the course management area. Here, users are provided with a list of courses, which the system retrieves from the database. The list is tailored to the userâ€™s level, program, and faculty, ensuring that only relevant courses are displayed. Students can register their courses after the admin has created the courses and organized them into registration codes. The students use the registration codes that the system generates to register for their courses. Once registration is complete, the course is added to the courses array within the database, effectively registering the student for the courses. When a lecturer is assigned a course, it becomes their responsibility to manage the course. They can add lessons and lesson materials to chapters within the course page. They can start live class sessions for a particular course and chapter. This is to allow for centralized management of course materials.

Course Assignment Submissions Management
The submission management system in this system is designed to facilitate a structured process for lecturers to create and manage submission assignments, and for students to submit their work within specified timelines. When a lecturer needs to create a new assignment, they provide essential details such as the course code, title, instructions, start date, and end date. These details are carefully handled by the system, which organizes them into a well-structured object. The course code is then used to retrieve the corresponding course name from the Courses collection, ensuring that the assignment is linked to the correct course. If there is no existing submission record for the course, a new entry is created in the Submissions collection. This entry includes the course code, course name, lecturer ID, and all relevant submission details under the lecturer-submission field. This process ensures that each assignment is properly associated with its course and lecturer, providing a foundation for the submission lifecycle. In cases where a submission record already exists for a particular course, the system uses the a function to add the new submission details to the existing document. This function leverages the $addToSet operator, which appends the new submission to the submission document in the Submissions collection, ensuring that no duplicates are created. This approach allows for the seamless updating of existing submissions, enabling lecturers to manage multiple assignments within the same course. Students interact with the platform to access their assignments and submit their work. Once a student uploads their submission, the system associates the uploaded files with the corresponding student's record in the student-submissions field of the Submissions collection. The file-URL field is utilized to manage the file paths, ensuring that each submission is properly linked to the student and can be accessed or reviewed later. This mechanism facilitates the organized storage and retrieval of student submissions. After the submission deadline has passed, lecturers can review all the student submissions. As they evaluate and grade the submissions, the system updates the status of each entry to reflect whether it has been graded or is still pending. This process allows for clear tracking of which submissions have been reviewed and ensures that all students receive timely feedback on their work.
The platform offers several additional functionalities to enhance the submission management process. For example, a robust download system allows lecturers to download all student submissions as a ZIP file, making it easier to review submissions offline or in bulk. The system is equipped with robust error handling mechanisms to manage various scenarios. The frontend of the platform is designed to interact seamlessly with the backend, providing lecturers with dynamic forms and buttons that trigger the submission process. 
This ensures a seamless interaction between lecturers and students, with clear data management and robust error handling. The code provided effectively implements this flow, allowing for the creation, management, and grading of submission assignments within the platform.